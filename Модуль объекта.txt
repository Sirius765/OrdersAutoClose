Функция ЗаполнитьТаблицуЗаказов_Стар(сПараметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛОЖЬ КАК Обработать,
	               |	влож.ЗаказПокупателя КАК ЗаказПокупателя,
	               |	влож.Действие КАК Действие,
	               |	влож.Предупредить,
	               |	влож.Закрыть,
	               |	влож.ДатаПланируемогоАвтозакрытияЗаказа,
	               |	влож.ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	влож.Ответственный,
	               |	влож.ОсновнойМенеджерПокупателя,
	               |	вл_Задачи_Ответственный.Задача КАК Задача_Ответственный,
	               |	вл_Задачи_ОсновнойМенеджер.Задача КАК Задача_ОсновнойМенеджерПокупателя,
	               |	СУММА(влож.Реализация_Сумма) КАК Реализация_Сумма,
	               |	СУММА(влож.ОплатаОтПокупателя_Сумма) КАК ОплатаОтПокупателя_Сумма,
	               |	СУММА(влож.Комплектация_Количество) КАК Комплектация_Количество,
	               |	СУММА(влож.Размещение_Оборот) КАК Размещение_Оборот,
	               |	СУММА(влож.Размещение_Остаток) КАК Размещение_Остаток
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка КАК ЗаказПокупателя,
	               |		""Закрыть и уведомить"" КАК Действие,
	               |		вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Ответственный КАК Ответственный,
	               |		вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Контрагент.ОсновнойМенеджерПокупателя КАК ОсновнойМенеджерПокупателя,
	               |		ИСТИНА КАК Предупредить,
	               |		ВЫБОР
	               |			КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Дата, ДЕНЬ, &КоличествоДнейОжидания + &КоличествоДнейПредупрежденияПередЗакрытием), ДЕНЬ)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ КАК Закрыть,
	               |		0 КАК ОплатаОтПокупателя_Сумма,
	               |		0 КАК Размещение_Оборот,
	               |		0 КАК Размещение_Остаток,
	               |		0 КАК Реализация_Сумма,
	               |		НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Дата, ДЕНЬ, &КоличествоДнейПредупрежденияПередЗакрытием + &КоличествоДнейОжидания), ДЕНЬ) КАК ДатаПланируемогоАвтозакрытияЗаказа,
	               |		0 КАК Комплектация_Количество
	               |	ИЗ
				   //++МС 07.12.2017
				   //|		(ВЫБРАТЬ
				   //|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва КАК ЗаказПокупателя_Ссылка,
				   //|			СУММА(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
				   //|		ИЗ
				   //|			РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
				   //|					,
				   //|					ДокументРезерва ССЫЛКА Документ.ЗаказПокупателя
				   //|						И ДокументРезерва.Дата <= &ДатаОкончания) КАК ТоварыВРезервеНаСкладахОстатки
				   //|		ГДЕ
				   //|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва.Дата >= &ДатаНачала
				   //|		
				   //|		СГРУППИРОВАТЬ ПО
				   //|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва) КАК вл_ЗаказыПокупателей
				   //////////
				   |		(ВЫБРАТЬ
	               |			ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя_Ссылка,
	               |			СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |		ИЗ
	               |			РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя.Дата <= &ДатаОкончания) КАК ЗаказыПокупателейОстатки
	               |		ГДЕ
				   |			ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата >= &ДатаНачала
				   |
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗаказыПокупателейОстатки.ЗаказПокупателя) КАК вл_ЗаказыПокупателей
				   //--МС 07.12.2017
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				ДвиженияДенежныхСредствОбороты.Регистратор КАК ДДС_Регистратор,
	               |				ДвиженияДенежныхСредствОбороты.Сделка КАК ДДС_Сделка
	               |			ИЗ
	               |				РегистрНакопления.ДвиженияДенежныхСредств.Обороты(, , Регистратор, Сделка ССЫЛКА Документ.ЗаказПокупателя) КАК ДвиженияДенежныхСредствОбороты
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ДвиженияДенежныхСредствОбороты.Регистратор,
	               |				ДвиженияДенежныхСредствОбороты.Сделка) КАК вл_ДДС
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_ДДС.ДДС_Сделка
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				РазмещениеЗаказовПокупателейОбороты.ЗаказПокупателя КАК РазмещениеЗаказов_ЗаказПокупателя
	               |			ИЗ
	               |				РегистрНакопления.РазмещениеЗаказовПокупателей.Обороты(, , , ) КАК РазмещениеЗаказовПокупателейОбороты
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				РазмещениеЗаказовПокупателейОбороты.ЗаказПокупателя) КАК вл_РазмещенияЗаказов
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_РазмещенияЗаказов.РазмещениеЗаказов_ЗаказПокупателя
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				ПродажиОбороты.ЗаказПокупателя КАК ЗаказПокупателя,
	               |				СУММА(ПродажиОбороты.СтоимостьОборот) КАК Продажа_Стоимость
	               |			ИЗ
	               |				РегистрНакопления.Продажи.Обороты КАК ПродажиОбороты
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ПродажиОбороты.ЗаказПокупателя) КАК вл_Продажи
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_Продажи.ЗаказПокупателя
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка.Заказ КАК Комплектация_Заказ,
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка КАК Комплектация_Ссылка,
	               |				СУММА(КомплектацияНоменклатурыКомплектующие.Количество) КАК Комплектация_Количество
	               |			ИЗ
	               |				Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
	               |			ГДЕ
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка.Проведен = ИСТИНА
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка,
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка.Заказ) КАК вл_Комплектация
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_Комплектация.Комплектация_Заказ
	               |	ГДЕ
	               |		вл_ДДС.ДДС_Регистратор ЕСТЬ NULL
	               |		И вл_РазмещенияЗаказов.РазмещениеЗаказов_ЗаказПокупателя ЕСТЬ NULL
	               |		И вл_Продажи.ЗаказПокупателя ЕСТЬ NULL
	               |		И вл_Комплектация.Комплектация_Ссылка ЕСТЬ NULL
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка,
	               |		""Только предупредить"",
	               |		вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Ответственный,
	               |		вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Контрагент.ОсновнойМенеджерПокупателя,
	               |		ВЫБОР
	               |			КОГДА ДЕНЬНЕДЕЛИ(ДОБАВИТЬКДАТЕ(вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка.Дата, ДЕНЬ, &КоличествоДнейОжидания)) = ДЕНЬНЕДЕЛИ(&ТекущаяДата)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ,
	               |		ЛОЖЬ,
	               |		вл_ДДС.СуммаОборот,
	               |		вл_РазмещенияЗаказов.КоличествоОборот,
	               |		вл_РазмещенияЗаказов_Остатки.КоличествоОстаток,
	               |		вл_Продажи.Продажа_Стоимость,
	               |		"""",
	               |		вл_Комплектация.Комплектация_Количество
	               |	ИЗ
				   //++МС 07.12.2017
				   //|		(ВЫБРАТЬ
				   //|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва КАК ЗаказПокупателя_Ссылка,
				   //|			СУММА(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
				   //|		ИЗ
				   //|			РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
				   //|					,
				   //|					ДокументРезерва ССЫЛКА Документ.ЗаказПокупателя
				   //|						И ДокументРезерва.Дата <= &ДатаОкончания) КАК ТоварыВРезервеНаСкладахОстатки
				   //|		ГДЕ
				   //|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва.Дата >= &ДатаНачала
				   //|		
				   //|		СГРУППИРОВАТЬ ПО
				   //|			ТоварыВРезервеНаСкладахОстатки.ДокументРезерва) КАК вл_ЗаказыПокупателей
				   //////////
				   |		(ВЫБРАТЬ
	               |			ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя_Ссылка,
	               |			СУММА(ЗаказыПокупателейОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |		ИЗ
	               |			РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя.Дата <= &ДатаОкончания) КАК ЗаказыПокупателейОстатки
	               |		ГДЕ
				   |			ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата >= &ДатаНачала
				   |
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗаказыПокупателейОстатки.ЗаказПокупателя) КАК вл_ЗаказыПокупателей
				   //--МС 07.12.2017
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				ДвиженияДенежныхСредствОбороты.Регистратор КАК ДДС_Регистратор,
	               |				ДвиженияДенежныхСредствОбороты.Сделка КАК ДДС_Сделка,
	               |				СУММА(ДвиженияДенежныхСредствОбороты.СуммаОборот) КАК СуммаОборот
	               |			ИЗ
	               |				РегистрНакопления.ДвиженияДенежныхСредств.Обороты(, , Регистратор, Сделка ССЫЛКА Документ.ЗаказПокупателя) КАК ДвиженияДенежныхСредствОбороты
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ДвиженияДенежныхСредствОбороты.Регистратор,
	               |				ДвиженияДенежныхСредствОбороты.Сделка) КАК вл_ДДС
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_ДДС.ДДС_Сделка
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				РазмещениеЗаказовПокупателейОбороты.ЗаказПокупателя КАК РазмещениеЗаказов_ЗаказПокупателя,
	               |				СУММА(РазмещениеЗаказовПокупателейОбороты.КоличествоОборот) КАК КоличествоОборот
	               |			ИЗ
	               |				РегистрНакопления.РазмещениеЗаказовПокупателей.Обороты(, , , ) КАК РазмещениеЗаказовПокупателейОбороты
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				РазмещениеЗаказовПокупателейОбороты.ЗаказПокупателя) КАК вл_РазмещенияЗаказов
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_РазмещенияЗаказов.РазмещениеЗаказов_ЗаказПокупателя
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				РазмещениеЗаказовПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	               |				СУММА(РазмещениеЗаказовПокупателейОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |			ИЗ
	               |				РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки КАК РазмещениеЗаказовПокупателейОстатки
	               |			ГДЕ
	               |				РазмещениеЗаказовПокупателейОстатки.КоличествоОстаток <> 0
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				РазмещениеЗаказовПокупателейОстатки.ЗаказПокупателя) КАК вл_РазмещенияЗаказов_Остатки
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_РазмещенияЗаказов_Остатки.ЗаказПокупателя
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				ПродажиОбороты.ЗаказПокупателя КАК ЗаказПокупателя,
	               |				СУММА(ПродажиОбороты.СтоимостьОборот) КАК Продажа_Стоимость
	               |			ИЗ
	               |				РегистрНакопления.Продажи.Обороты КАК ПродажиОбороты
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ПродажиОбороты.ЗаказПокупателя) КАК вл_Продажи
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_Продажи.ЗаказПокупателя
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка.Заказ КАК Комплектация_Заказ,
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка КАК Комплектация_Ссылка,
	               |				СУММА(КомплектацияНоменклатурыКомплектующие.Количество) КАК Комплектация_Количество
	               |			ИЗ
	               |				Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
	               |			ГДЕ
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка.Проведен = ИСТИНА
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка,
	               |				КомплектацияНоменклатурыКомплектующие.Ссылка.Заказ) КАК вл_Комплектация
	               |			ПО вл_ЗаказыПокупателей.ЗаказПокупателя_Ссылка = вл_Комплектация.Комплектация_Заказ
	               |	ГДЕ
	               |		вл_РазмещенияЗаказов_Остатки.ЗаказПокупателя ЕСТЬ NULL
	               |		И (НЕ вл_ДДС.ДДС_Регистратор ЕСТЬ NULL
	               |				ИЛИ НЕ вл_РазмещенияЗаказов.РазмещениеЗаказов_ЗаказПокупателя ЕСТЬ NULL
	               |				ИЛИ НЕ вл_Продажи.ЗаказПокупателя ЕСТЬ NULL
	               |				ИЛИ НЕ вл_Комплектация.Комплектация_Заказ ЕСТЬ NULL)) КАК влож
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗадачиПользователя.Ссылка КАК Задача,
	               |			ЗадачиПользователя.Объект КАК Объект,
	               |			ЗадачиПользователя.Исполнитель КАК Исполнитель
	               |		ИЗ
	               |			Задача.ЗадачиПользователя КАК ЗадачиПользователя) КАК вл_Задачи_Ответственный
	               |		ПО влож.ЗаказПокупателя = вл_Задачи_Ответственный.Объект
	               |			И влож.Ответственный = вл_Задачи_Ответственный.Исполнитель
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗадачиПользователя.Ссылка КАК Задача,
	               |			ЗадачиПользователя.Объект КАК Объект,
	               |			ЗадачиПользователя.Исполнитель КАК Исполнитель
	               |		ИЗ
	               |			Задача.ЗадачиПользователя КАК ЗадачиПользователя) КАК вл_Задачи_ОсновнойМенеджер
	               |		ПО влож.ЗаказПокупателя = вл_Задачи_ОсновнойМенеджер.Объект
	               |			И влож.ОсновнойМенеджерПокупателя = вл_Задачи_ОсновнойМенеджер.Исполнитель
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	влож.ЗаказПокупателя,
	               |	влож.Действие,
	               |	влож.ОсновнойМенеджерПокупателя,
	               |	влож.Ответственный,
	               |	вл_Задачи_Ответственный.Задача,
	               |	вл_Задачи_ОсновнойМенеджер.Задача,
	               |	влож.ЗаказПокупателя.Контрагент,
	               |	влож.Предупредить,
	               |	влож.Закрыть,
	               |	влож.ДатаПланируемогоАвтозакрытияЗаказа
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Действие,
	               |	ЗаказПокупателя
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(сПараметры.ДатаНачала));         
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(сПараметры.ТекущаяДата-сПараметры.КоличествоДнейОжидания*24*60*60));
	// ++МС
	//Запрос.УстановитьПараметр("Склад",сПараметры.Склад);
	//Запрос.УстановитьПараметр("ОсновнойМенеджерПокупателя_Разное",сПараметры.ОсновнойМенеджерПокупателя_Разное);
	// --МС
	
	Запрос.УстановитьПараметр("ТекущаяДата",КонецДня(сПараметры.ТекущаяДата));
	Запрос.УстановитьПараметр("КоличествоДнейПредупрежденияПередЗакрытием",Справочники.дм_КонстантыМегатрейд.КоличествоДнейПредупрежденияПередАвтозакрытиемЗаказовПокупателей.Значение);
	Запрос.УстановитьПараметр("КоличествоДнейОжидания",сПараметры.КоличествоДнейОжидания);
	
	//Запрос.УстановитьПараметр("КромеКонтрагента",Справочники.Контрагенты.НайтиПоКоду("07362")); //Информационные технологии (Элтеза)
	//Запрос.УстановитьПараметр("КромеГруппыПроекта",Справочники.Проекты.НайтиПоКоду("000000015")); //РЖД
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции

Функция ЗаполнитьТаблицуЗаказов(сПараметры) Экспорт
	Запрос = Новый Запрос;
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	//|	ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	//|	РАЗНОСТЬДАТ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) КАК КолВоДней,
	//|	ВЫБОР
	//|		КОГДА РАЗНОСТЬДАТ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) < &ДнейДоЗакрытия
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК Предупредить,
	//|	ВЫБОР
	//|		КОГДА РАЗНОСТЬДАТ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) >= &ДнейДоЗакрытия
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК Закрыть,
	//|	вл_Задачи_Ответственный.Задача КАК Задача_Ответственный,
	//|	вл_Задачи_ОсновнойМенеджер.Задача КАК Задача_ОсновнойМенеджерПокупателя,
	//|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный КАК Ответственный,
	//|	ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец.ОсновнойМенеджерПокупателя КАК ОсновнойМенеджерПокупателя,
	//|	ИСТИНА КАК Обработать,
	//|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, ДЕНЬ, &ДнейДоЗакрытия), ДЕНЬ) КАК ДатаПланируемогоАвтозакрытияЗаказа
	//|ИЗ
	//|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	//|			,
	//|			ЗаказПокупателя.Дата > &ДатаНачала
	//|				И РАЗНОСТЬДАТ(ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) > &ДнейДоЗакрытия - &ДнейПредупрежденияПередЗакрытием) КАК ЗаказыПокупателейОстатки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|			ЗадачиПользователя.Ссылка КАК Задача,
	//|			ЗадачиПользователя.Объект КАК Объект,
	//|			ЗадачиПользователя.Исполнитель КАК Исполнитель
	//|		ИЗ
	//|			Задача.ЗадачиПользователя КАК ЗадачиПользователя) КАК вл_Задачи_Ответственный
	//|		ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = вл_Задачи_Ответственный.Объект
	//|			И ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный = вл_Задачи_Ответственный.Исполнитель
	//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|			ЗадачиПользователя.Ссылка КАК Задача,
	//|			ЗадачиПользователя.Объект КАК Объект,
	//|			ЗадачиПользователя.Исполнитель КАК Исполнитель
	//|		ИЗ
	//|			Задача.ЗадачиПользователя КАК ЗадачиПользователя) КАК вл_Задачи_ОсновнойМенеджер
	//|		ПО ЗаказыПокупателейОстатки.ЗаказПокупателя = вл_Задачи_ОсновнойМенеджер.Объект
	//|			И ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец.ОсновнойМенеджерПокупателя = вл_Задачи_ОсновнойМенеджер.Исполнитель
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ЗаказПокупателя
	//|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	РАЗНОСТЬДАТ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) КАК КолВоДней,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) < &ДнейДоЗакрытия
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Предупредить,
	|	ВЫБОР
	|		КОГДА РАЗНОСТЬДАТ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) >= &ДнейДоЗакрытия
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Закрыть,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя.Ответственный КАК Ответственный,
	|	ЗаказыПокупателейОстатки.ДоговорКонтрагента.Владелец.ОсновнойМенеджерПокупателя КАК ОсновнойМенеджерПокупателя,
	|	ИСТИНА КАК Обработать,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗаказыПокупателейОстатки.ЗаказПокупателя.Дата, ДЕНЬ, &ДнейДоЗакрытия), ДЕНЬ) КАК ДатаПланируемогоАвтозакрытияЗаказа
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(
	|			,
	|			ЗаказПокупателя.Дата > &ДатаНачала
	|				И РАЗНОСТЬДАТ(ЗаказПокупателя.Дата, &ТекущаяДата, ДЕНЬ) > &ДнейДоЗакрытия - &ДнейПредупрежденияПередЗакрытием) КАК ЗаказыПокупателейОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПокупателя
	|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(сПараметры.ДатаНачала));         
	Запрос.УстановитьПараметр("ДнейПредупрежденияПередЗакрытием",Справочники.дм_КонстантыМегатрейд.КоличествоДнейПредупрежденияПередАвтозакрытиемЗаказовПокупателей.Значение);
	Запрос.УстановитьПараметр("ДнейДоЗакрытия",Справочники.дм_КонстантыМегатрейд.КоличествоДнейОжиданияАвтозакрытияЗаказовПокупателей.Значение);
	Запрос.УстановитьПараметр("ТекущаяДата",КонецДня(сПараметры.ТекущаяДата));
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

//Функция ОбновитьЗадачу(стзЗаказ,сПолучатель,сТипДействия) Экспорт
Процедура ОбновитьЗадачу(стзЗаказ,сПолучатель) Экспорт
	Если НЕ стзЗаказ.Закрыть И НЕ стзЗаказ.Предупредить Тогда Возврат;	КонецЕсли;
	
	лИсполнитель = стзЗаказ[сПолучатель];
	Если НЕ ЗначениеЗаполнено(лИсполнитель) Тогда
		лИсполнитель = Справочники.Пользователи.НайтиПоНаименованию("Савченко Надежда Евгеньевна");
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗадачиПользователя.Ссылка КАК Задача
	|ИЗ
	|	Задача.ЗадачиПользователя КАК ЗадачиПользователя
	|ГДЕ
	|	НЕ ЗадачиПользователя.ПометкаУдаления
	|	И ЗадачиПользователя.Объект = &Заказ
	|	И ЗадачиПользователя.Исполнитель = &Исполнитель";
	Запрос.УстановитьПараметр("Заказ", стзЗаказ.ЗаказПокупателя); 
	Запрос.УстановитьПараметр("Исполнитель", лИсполнитель);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество() > 0 Тогда
		зо = Рез[0].Задача.ПолучитьОбъект();
	Иначе
		зо = Задачи.ЗадачиПользователя.СоздатьЗадачу();
		
		//Если лИсполнитель = Справочники.Пользователи.НайтиПоНаименованию("Иванова Екатерина Анатольевна") Тогда
		//	лИсполнитель = Справочники.Пользователи.НайтиПоНаименованию("Программист");
		//КонецЕсли;
		зо.Исполнитель  = лИсполнитель;
		зо.Объект		= стзЗаказ.ЗаказПокупателя;
	КонецЕсли;
	
	
	//Если ЗначениеЗаполнено(стзЗаказ["Задача_"+сПолучатель]) = Истина Тогда
	//	зо = стзЗаказ["Задача_"+сПолучатель].получитьОбъект();
	//Иначе
	//	зо = Задачи.ЗадачиПользователя.СоздатьЗадачу();
	//	//++МС 06.12.2017 Отладка
	//	//зо.Исполнитель  = стзЗаказ[сПолучатель];
	//	лИсполнитель = стзЗаказ[сПолучатель];
	//	Если лИсполнитель = Справочники.Пользователи.НайтиПоНаименованию("Иванова Екатерина Анатольевна") Тогда
	//		лИсполнитель = Справочники.Пользователи.НайтиПоНаименованию("Программист");
	//	КонецЕсли;
	//	зо.Исполнитель  = лИсполнитель;
	//	//--МС 06.12.2017 Отладка
	//	зо.Объект		= стзЗаказ.ЗаказПокупателя;
	//КонецЕсли;
	зо.Дата				= НачалоДня(ТекущаяДата());
	зо.СрокИсполнения 	= КонецДня(ТекущаяДата());
	//++МС 18.12.2017
	//Если Лев(стзЗаказ.Действие,7)="Закрыть" Тогда
	//	Если сТипДействия = "Закрытие" Тогда
	//		зо.Описание			= "Автоматически закрыт заказ:"+СокрЛП(стзЗаказ.Контрагент)+", "+СокрЛП(стзЗаказ.ЗаказПокупателя);
	//	Иначе	
	//		зо.Описание			= Формат(стзЗаказ.ДатаПланируемогоАвтозакрытияЗаказа,"ДФ=dd.MM.yyyy")+" - дата планируемого автозакрытия заказа: "+СокрЛП(стзЗаказ.Контрагент)+", "+СокрЛП(стзЗаказ.ЗаказПокупателя);
	//	КонецЕсли;
	//Иначе	
	//	зо.Описание			= "Напоминание о незакрытом заказе: "+СокрЛП(стзЗаказ.Контрагент)+", "+СокрЛП(стзЗаказ.ЗаказПокупателя);
	//КонецЕсли;
	Если стзЗаказ.Закрыть Тогда
		зо.Описание			= "Автоматически закрыт заказ:"+СокрЛП(стзЗаказ.Контрагент)+", "+СокрЛП(стзЗаказ.ЗаказПокупателя);
	ИначеЕсли стзЗаказ.Предупредить Тогда
		зо.Описание			= Формат(стзЗаказ.ДатаПланируемогоАвтозакрытияЗаказа,"ДФ=dd.MM.yyyy")+" - дата планируемого автозакрытия заказа: "+СокрЛП(стзЗаказ.Контрагент)+", "+СокрЛП(стзЗаказ.ЗаказПокупателя);
	КонецЕсли;
	//--МС 18.12.2017
	зо.Наименование		= СокрЛП(зо.Описание);
	зо.Инициатор		= ПараметрыСеанса.ТекущийПользователь;
	зо.Оповещение		= Истина;
	зо.СрокОповещения	= НачалоДня(ТекущаяДата());
	зо.ПамятнаяДата     = Ложь;
	зо.ДатаИсполнения	= КонецДня(ТекущаяДата());
	//зо.СотрудникКлиент	= Перечисления.ВидЗадачи.Сотрудник;
	зо.Контрагент		= стзЗаказ.Контрагент;
	зо.ПометкаУдаления	= Ложь;
	зо.Выполнена		= Ложь;
	зо.Записать();
	//Возврат зо.Ссылка;
КонецПроцедуры

Функция ПредупредитьПользователей(тпЗаказы) Экспорт
	
	ЗаписьЖурналаРегистрации("Фоновое задание. Автозакрытие заказов: предупредить пользователей", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПокупателей, "АвтоЗакрытиеЗаказовПокупателей", "Старт предупреждения пользователей");
	
	колСтрок = 0;
	Для Каждого стзЗаказ Из тпЗаказы Цикл
		
		Если стзЗаказ.Предупредить = Истина Тогда
			НачатьТранзакцию();
			//стзЗаказ.Задача_Ответственный 				= ОбновитьЗадачу(стзЗаказ,"Ответственный");	
			ОбновитьЗадачу(стзЗаказ,"Ответственный");	
			Если стзЗаказ.Ответственный <> стзЗаказ.ОсновнойМенеджерПокупателя Тогда
				//стзЗаказ.Задача_ОсновнойМенеджерПокупателя 	= ОбновитьЗадачу(стзЗаказ,"ОсновнойМенеджерПокупателя");
				ОбновитьЗадачу(стзЗаказ,"ОсновнойМенеджерПокупателя");
			КонецЕсли;
			колСтрок = колСтрок + 1;
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Фоновое задание. Автозакрытие заказов: предупредить пользователей", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПокупателей, "АвтоЗакрытиеЗаказовПокупателей", "Окончание предупреждения пользователей");
	
	Возврат колСтрок;
	
КонецФункции

//параметры:
//ЗаказПокупателя, Ответственный, Задача_Ответственный,ОсновнойМенеджерПокупателя,Задача_ОсновнойМенеджерПокупателя
Процедура ЗакрытьОдинЗаказПокупателя(сПараметры) Экспорт

	Если сПараметры.Свойство("ЗаказПокупателя") = Истина Тогда
		ЗаказПокупателя = сПараметры.ЗаказПокупателя;
	Иначе
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЗаказПокупателя) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	
	// ++МС 26.10.2017 Поставить статус "Отменен" - если реализации по заказу не было
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Сделка = &Сделка
	|	И РеализацияТоваровУслуг.Проведен";
	Запрос.УстановитьПараметр("Сделка", ЗаказПокупателя.ссылка);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Если ЗаказПокупателя.СтатусЗаказа <> Перечисления.СтатусыЗаказа.Отменен Тогда
			ЗаказОб = ЗаказПокупателя.ПолучитьОбъект();
			ЗаказОб.СтатусЗаказа = Перечисления.СтатусыЗаказа.Отменен;
			Попытка
				ЗаказОб.Записать();
				//Сообщить("Статус заказа: """ + ЗаказПокупателя + """ изменен со статуса """ + лСтарыйСтатус + """ на """ + ЗаказОб.СтатусЗаказа + """");
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;	
		КонецЕсли;
		Возврат;	// Отмененный заказ в закрытии не нуждается
	Иначе
		Если ЗаказПокупателя.СтатусЗаказа <> Перечисления.СтатусыЗаказа.Отгружено Тогда
			ЗаказОб = ЗаказПокупателя.ПолучитьОбъект();
			ЗаказОб.СтатусЗаказа = Перечисления.СтатусыЗаказа.Отгружено;
			Попытка
				ЗаказОб.Записать();
				//Сообщить("Статус заказа: """ + ЗаказПокупателя + """ изменен со статуса """ + лСтарыйСтатус + """ на """ + ЗаказОб.СтатусЗаказа + """");
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	// ++МС 26.10.2017 Поставить статус "Отменен" - если реализации по заказу не было
	
	
	до = Документы.ЗакрытиеЗаказовПокупателей.СоздатьДокумент();
	до.дата 			= ТекущаяДата();
	до.Подразделение 	= ЗаказПокупателя.Подразделение;
	до.Ответственный	= ПараметрыСеанса.ТекущийПользователь;
	до.ВидОперации		= Перечисления.ВидыОперацийЗакрытиеЗаказовПокупателей.ЗакрытиеЗаказов;
	//до.СпособЗаполнения	= 
	до.Комментарий		= "#Заказ закрыт автоматически";
	
	тч = до.Заказы;
	стч = тч.Добавить();
	стч.ЗаказПокупателя			= ЗаказПокупателя.ссылка;
	стч.ПричинаЗакрытияЗаказа	= Справочники.ПричиныЗакрытияЗаказов.НайтиПоКоду("УТ0000001");
	
	Попытка
		до.Записать(РежимЗаписиДокумента.Запись);
		до.Записать(РежимЗаписиДокумента.Проведение);
		Сообщить("Создано: "+СокрЛП(до.Ссылка));
	Исключение
		Сообщить("Ошибка создания документа ""Закрытие заказа покупателей"" для заказа """ + ЗаказПокупателя.ссылка + """: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Функция ЗакрытьИУведомить(тпЗаказы) Экспорт
	
	ЗаписьЖурналаРегистрации("Фоновое задание. Автозакрытие заказов: закрыть заказы", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПокупателей, "АвтоЗакрытиеЗаказовПокупателей", "Старт закрытия заказов");
	
	колСтрок = 0;
	Для Каждого стзЗаказ Из тпЗаказы Цикл
		Если стзЗаказ.Закрыть = Истина Тогда
			
			НачатьТранзакцию();
			
			//закрываем	
			сПараметры = Новый Структура;
			сПараметры.Вставить("ЗаказПокупателя",стзЗаказ.ЗаказПокупателя);
			ЗакрытьОдинЗаказПокупателя(сПараметры);
			
			//информируем если прошло не более 5 дней
			Если (стзЗаказ.ДатаПланируемогоАвтозакрытияЗаказа + 5*60*60*24) >= ТекущаяДата() Тогда
				//стзЗаказ.Задача_Ответственный 				= ОбновитьЗадачу(стзЗаказ,"Ответственный");
				ОбновитьЗадачу(стзЗаказ,"Ответственный");
				Если стзЗаказ.Ответственный <> стзЗаказ.ОсновнойМенеджерПокупателя Тогда
					//стзЗаказ.Задача_ОсновнойМенеджерПокупателя 	= ОбновитьЗадачу(стзЗаказ,"ОсновнойМенеджерПокупателя");
					ОбновитьЗадачу(стзЗаказ,"ОсновнойМенеджерПокупателя");
				КонецЕсли;
			КонецЕсли;
			колСтрок = колСтрок + 1;
			
			ЗафиксироватьТранзакцию();
			
		КонецЕсли;	
		
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Фоновое задание. Автозакрытие заказов: закрыть заказы", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПокупателей, "АвтоЗакрытиеЗаказовПокупателей", "Окончание закрытия заказов");
	
	Возврат КолСтрок;
	
КонецФункции

// ++МС 08.10.2017 МТ0039 Автозакрытие заказов поставщиков
#region ЗакрытиеЗаказовПоставщикам

Процедура ЗакрытьЗаказыПоставщикам(сПараметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.Номенклатура,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	РАЗНОСТЬДАТ(ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата, &ТекущаяДата, ДЕНЬ) КАК КолВоДней
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			,
	|			ЗаказПоставщику.Дата > &ДатаНачала
	|				И РАЗНОСТЬДАТ(ЗаказПоставщику.Дата, &ТекущаяДата, ДЕНЬ) > ВЫБОР
	|					КОГДА ДоговорКонтрагента.Владелец.МС_КоличествоДнейДоставкиТовараПоставщиком <> 0
	|						ТОГДА ДоговорКонтрагента.Владелец.МС_КоличествоДнейДоставкиТовараПоставщиком
	|					ИНАЧЕ &КоличествоДнейОжидания
	|				КОНЕЦ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПоставщику
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(сПараметры.ДатаНачала));         
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КоличествоДнейОжидания",сПараметры.КоличествоДнейОжидания);
	
	тпЗаказы = Запрос.Выполнить().Выгрузить();
	тпЗаказы.Свернуть("ЗаказПоставщику,Контрагент,КолВоДней");
	
	ЗаписьЖурналаРегистрации("Фоновое задание. Автозакрытие заказов: закрыть заказы поставщикам", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПокупателей, "АвтоЗакрытиеЗаказовПокупателей", "Старт закрытия заказов поставщикам");
	
	колСтрок = 0;
	Для Каждого стзЗаказ Из тпЗаказы Цикл
		
		НачатьТранзакцию();
		
		//закрываем	
		сПараметры = Новый Структура;
		сПараметры.Вставить("ЗаказПоставщику",стзЗаказ.ЗаказПоставщику);
		ЗакрытьОдинЗаказПоставщику(сПараметры);
		
		//информируем	
		//стзЗаказ.Задача_Ответственный 				= ОбновитьЗадачу(стзЗаказ,"Ответственный","Закрытие");
		//стзЗаказ.Задача_ОсновнойМенеджерПокупателя 	= ОбновитьЗадачу(стзЗаказ,"ОсновнойМенеджерПокупателя","Закрытие");
		//колСтрок = колСтрок + 1;
		
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Фоновое задание. Автозакрытие заказов: закрыть заказы поставщикам", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПокупателей, "АвтоЗакрытиеЗаказовПокупателей", "Окончание закрытия заказов поставщикам");
	
	//Возврат КолСтрок;
	
КонецПроцедуры

Процедура ЗакрытьОдинЗаказПоставщику(сПараметры) Экспорт

	Если сПараметры.Свойство("ЗаказПоставщику") Тогда
		ЗаказПоставщику = сПараметры.ЗаказПоставщику;
	Иначе
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		Возврат;
	КонецЕсли;
	
	до = Документы.ЗакрытиеЗаказовПоставщикам.СоздатьДокумент();
	до.дата 			= ТекущаяДата();
	до.Подразделение 	= ЗаказПоставщику.Подразделение;
	до.Ответственный	= ПараметрыСеанса.ТекущийПользователь;
	до.Комментарий		= "#Заказ закрыт автоматически";
	
	тч = до.Заказы;
	стч = тч.Добавить();
	стч.ЗаказПоставщику			= ЗаказПоставщику.ссылка;
	стч.ПричинаЗакрытияЗаказа	= Справочники.ПричиныЗакрытияЗаказов.НайтиПоКоду("УТ0000001");
	
	Попытка
		до.Записать(РежимЗаписиДокумента.Запись);
		до.Записать(РежимЗаписиДокумента.Проведение);
		Сообщить("Создано: "+СокрЛП(до.Ссылка));
	Исключение
		Сообщить("Ошибка создания документа ""Закрытие заказа поставщикам"" для заказа """ + ЗаказПоставщику.ссылка + """: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#endregion 
// --МС 08.10.2017 МТ0039 Автозакрытие заказов поставщиков